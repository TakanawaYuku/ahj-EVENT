{"version":3,"file":"app.bundle.js","mappings":"yBAAe,MAAMA,EACnBC,YAAYC,GACVC,KAAKC,UAAYF,EACjBC,KAAKE,MAAQ,GACbF,KAAKG,WAAa,EAClBH,KAAKI,UAAYC,SAASC,cAAc,eACxCN,KAAKO,aACP,CAEAA,cACE,IAAK,IAAIC,EAAI,EAAGA,GAAKR,KAAKC,WAAa,EAAGO,GAAK,EAAG,CAChD,MAAMC,EAAOJ,SAASK,cAAc,OACpCD,EAAKE,UAAa,aAAYH,IAC9BR,KAAKI,UAAUQ,OAAOH,GAEtBT,KAAKE,MAAMW,KAAKJ,EAClB,CACF,CAEAK,cACE,MAAMC,EAAOV,SAASW,iBAAiB,SACjCC,EAAUC,MAAMC,KAAKJ,GAE3BE,EAAQjB,KAAKG,YAAYiB,UAAUC,OAAO,mBAC1CrB,KAAKG,WAAamB,KAAKC,MAAMD,KAAKE,SAAWP,EAAQQ,QACrDR,EAAQjB,KAAKG,YAAYiB,UAAUM,IAAI,kBACzC,CAEAC,YAEE3B,KAAKc,aACP,EC5BF,MAAMc,EAAQ,IAAI/B,EAAU,GAC5B+B,EAAMD,YAEQ,ICJC,cAAwB9B,EACrCC,YAAY8B,GACVC,QACA7B,KAAK4B,MAAQA,EACb5B,KAAK8B,aACL9B,KAAK+B,KAAO,EACZ/B,KAAKgC,KAAO,EACZhC,KAAKiC,WAAY,CACnB,CAEAC,QAAQC,GACN,MAAMJ,EAAO1B,SAAS+B,eAAe,QAC/BJ,EAAO3B,SAAS+B,eAAe,QACjCD,GACFnC,KAAK+B,MAAQ,EACbA,EAAKM,YAAcrC,KAAK+B,OAExB/B,KAAKgC,MAAQ,EACbA,EAAKK,YAAcrC,KAAKgC,KACN,IAAdhC,KAAKgC,OAEPM,MAAO,6BAA4BtC,KAAK+B,QACxCC,EAAKK,YAAc,EACnBN,EAAKM,YAAc,EACnBrC,KAAKgC,KAAO,EACZhC,KAAK+B,KAAO,IAGhB/B,KAAK4B,MAAMd,aACb,CAEAgB,aACES,aAAY,KACNvC,KAAKiC,UACPjC,KAAKiC,WAAY,EAEjBjC,KAAKkC,SAAQ,EACf,GACC,KAEHlC,KAAK4B,MAAM1B,MAAMsC,SAASC,IACxBA,EAAQC,iBAAiB,SAAS,KAChC1C,KAAKiC,WAAY,EACbQ,EAAQrB,UAAUuB,SAAS,oBAC7B3C,KAAKkC,SAAQ,GACblC,KAAK4B,MAAMd,eAEXd,KAAKkC,SAAQ,EACf,GACA,GAEN,GD/C0BN,E","sources":["webpack://ahj-event/./src/js/GameBoard.js","webpack://ahj-event/./src/js/app.js","webpack://ahj-event/./src/js/GameLogic.js"],"sourcesContent":["export default class GameBoard {\n  constructor(size) {\n    this.boardSize = size;\n    this.cells = [];\n    this.activeHole = 0;\n    this.gameBoard = document.querySelector('.game-board');\n    this.createBoard();\n  }\n\n  createBoard() {\n    for (let i = 1; i <= this.boardSize ** 2; i += 1) {\n      const cell = document.createElement('div');\n      cell.className = `hole hole-${i}`;\n      this.gameBoard.append(cell);\n\n      this.cells.push(cell);\n    }\n  }\n\n  setNextCell() {\n    const hole = document.querySelectorAll('.hole');\n    const arrHole = Array.from(hole);\n\n    arrHole[this.activeHole].classList.remove('hole_has-goblin');\n    this.activeHole = Math.floor(Math.random() * arrHole.length);\n    arrHole[this.activeHole].classList.add('hole_has-goblin');\n  }\n\n  showImage() {\n    // setInterval(() => this.setNextCell(), 1000);\n    this.setNextCell();\n  }\n}\n","import GameBoard from './GameBoard';\nimport GameLogic from './GameLogic';\n\nconst board = new GameBoard(4);\nboard.showImage();\n// eslint-disable-next-line no-unused-vars\nconst logic = new GameLogic(board);\n","import GameBoard from './GameBoard';\n\nexport default class GameLogic extends GameBoard {\n  constructor(board) {\n    super();\n    this.board = board;\n    this.eventClick();\n    this.dead = 0;\n    this.lost = 0;\n    this.clickOrNo = true;\n  }\n\n  scoring(score) {\n    const dead = document.getElementById('dead');\n    const lost = document.getElementById('lost');\n    if (score) {\n      this.dead += 1;\n      dead.textContent = this.dead;\n    } else {\n      this.lost += 1;\n      lost.textContent = this.lost;\n      if (this.lost === 5) {\n        // eslint-disable-next-line no-alert\n        alert(`GAME OVER!!! Your account ${this.dead}`);\n        lost.textContent = 0;\n        dead.textContent = 0;\n        this.lost = 0;\n        this.dead = 0;\n      }\n    }\n    this.board.setNextCell();\n  }\n\n  eventClick() {\n    setInterval(() => {\n      if (this.clickOrNo) {\n        this.clickOrNo = false;\n      } else {\n        this.scoring(false);\n      }\n    }, 1000);\n\n    this.board.cells.forEach((element) => {\n      element.addEventListener('click', () => {\n        this.clickOrNo = true;\n        if (element.classList.contains('hole_has-goblin')) {\n          this.scoring(true);\n          this.board.setNextCell();\n        } else {\n          this.scoring(false);\n        }\n      });\n    });\n  }\n}\n"],"names":["GameBoard","constructor","size","this","boardSize","cells","activeHole","gameBoard","document","querySelector","createBoard","i","cell","createElement","className","append","push","setNextCell","hole","querySelectorAll","arrHole","Array","from","classList","remove","Math","floor","random","length","add","showImage","board","super","eventClick","dead","lost","clickOrNo","scoring","score","getElementById","textContent","alert","setInterval","forEach","element","addEventListener","contains"],"sourceRoot":""}